{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "registry/ui/button.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nconst buttonVariants = cva(\n  \"inline-flex cursor-pointer items-center justify-center gap-2 whitespace-nowrap font-medium text-white text-base leading-[15px] select-none focus-visible:outline-none focus-visible:-outline-offset-4 focus-visible:outline-1 focus-visible:outline-dotted focus-visible:outline-black  disabled:pointer-events-none disabled:text-[#292c21] disabled:[text-shadow:_1px_1px_0_rgb(117_128_111)] disabled:cursor-not-allowed [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-t-[#8c9284] border-l-[#8c9284] border-r-[#292c21] border-b-[#292c21] active:border-t-[#292c21] active:border-l-[#292c21] active:border-r-[#8c9284] active:border-b-[#8c9284] ring-offset-background focus-visible:ring-2 focus-visible:ring-ring/50\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90 border border-t-[#8c9284] border-l-[#8c9284] border-r-[#292c21] border-b-[#292c21] active:border-t-[#292c21] active:border-l-[#292c21] active:border-r-[#8c9284] active:border-b-[#8c9284] ring-offset-background focus-visible:ring-2 focus-visible:ring-ring/50\",\n        outline:\n          \"border border-border active:border-l-[#292c21] active:border-r-[#8c9284] active:border-b-[#8c9284] bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-primary text-primary-foreground border ring ring-black border-t-[#8c9284] border-l-[#8c9284] border-r-[#292c21] border-b-[#292c21] active:border-t-[#292c21] active:border-l-[#292c21] active:border-r-[#8c9284] active:border-b-[#8c9284] ring-offset-background focus-visible:ring-2 focus-visible:ring-ring/50\",\n        ghost:\n          \"hover:text-accent-foreground active:bg-primary border border-transparent active:border-2 active:border-t-[#292c21] active:border-l-[#292c21] active:border-r-[#8c9284] active:border-b-[#8c9284] hover:border-t-[#292c21] hover:border hover:border-l-[#292c21] hover:border-r-[#8c9284] hover:border-b-[#8c9284]\",\n        link: \"text-accent-foreground underline-offset-4 hover:underline hover:decoration-dotted\",\n      },\n      size: {\n        default: \"h-6 pl-2 py-2 pr-6\",\n        url: \"h-4 focus-visible:outline-offset-1\",\n        sm: \"h-6 pl-1 pr-3 text-xs\",\n        lg: \"h-8 pl-2 pr-8\",\n        icon: \"h-5 w-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "type": "registry:ui"
    }
  ]
}